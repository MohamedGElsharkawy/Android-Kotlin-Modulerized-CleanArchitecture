// Generated by Dagger (https://dagger.dev).
package com.melih.interactors.sources;

import android.content.Context;
import android.net.NetworkInfo;
import com.melih.repository.network.ApiImpl;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LaunchesSource_Factory implements Factory<LaunchesSource> {
  private final Provider<Context> ctxProvider;

  private final Provider<ApiImpl> apiImplProvider;

  private final Provider<NetworkInfo> networkInfoProvider;

  public LaunchesSource_Factory(Provider<Context> ctxProvider, Provider<ApiImpl> apiImplProvider,
      Provider<NetworkInfo> networkInfoProvider) {
    this.ctxProvider = ctxProvider;
    this.apiImplProvider = apiImplProvider;
    this.networkInfoProvider = networkInfoProvider;
  }

  @Override
  public LaunchesSource get() {
    return new LaunchesSource(ctxProvider.get(), apiImplProvider.get(), networkInfoProvider);
  }

  public static LaunchesSource_Factory create(Provider<Context> ctxProvider,
      Provider<ApiImpl> apiImplProvider, Provider<NetworkInfo> networkInfoProvider) {
    return new LaunchesSource_Factory(ctxProvider, apiImplProvider, networkInfoProvider);
  }

  public static LaunchesSource newInstance(Context ctx, ApiImpl apiImpl,
      Provider<NetworkInfo> networkInfoProvider) {
    return new LaunchesSource(ctx, apiImpl, networkInfoProvider);
  }
}
