// Code generated by moshi-kotlin-codegen. Do not edit.
package com.melih.repository.entities

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonDataException
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.IntArray
import kotlin.Long
import kotlin.String

class RocketEntityJsonAdapter(moshi: Moshi) : JsonAdapter<RocketEntity>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("id", "name", "familyname", "imageSizes", "imageURL")

    private val longAdapter: JsonAdapter<Long> =
            moshi.adapter<Long>(Long::class.java, kotlin.collections.emptySet(), "id")

    private val stringAdapter: JsonAdapter<String> =
            moshi.adapter<String>(String::class.java, kotlin.collections.emptySet(), "name")

    private val intArrayAdapter: JsonAdapter<IntArray> =
            moshi.adapter<IntArray>(IntArray::class.java, kotlin.collections.emptySet(), "imageSizes")

    override fun toString(): String = "GeneratedJsonAdapter(RocketEntity)"

    override fun fromJson(reader: JsonReader): RocketEntity {
        var id: Long? = null
        var name: String? = null
        var familyName: String? = null
        var imageSizes: IntArray? = null
        var imageURL: String? = null
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> id = longAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'id' was null at ${reader.path}")
                1 -> name = stringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'name' was null at ${reader.path}")
                2 -> familyName = stringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'familyName' was null at ${reader.path}")
                3 -> imageSizes = intArrayAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'imageSizes' was null at ${reader.path}")
                4 -> imageURL = stringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'imageURL' was null at ${reader.path}")
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = RocketEntity()
        result = result.copy(
                id = id ?: result.id,
                name = name ?: result.name,
                familyName = familyName ?: result.familyName,
                imageSizes = imageSizes ?: result.imageSizes,
                imageURL = imageURL ?: result.imageURL)
        return result
    }

    override fun toJson(writer: JsonWriter, value: RocketEntity?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("id")
        longAdapter.toJson(writer, value.id)
        writer.name("name")
        stringAdapter.toJson(writer, value.name)
        writer.name("familyname")
        stringAdapter.toJson(writer, value.familyName)
        writer.name("imageSizes")
        intArrayAdapter.toJson(writer, value.imageSizes)
        writer.name("imageURL")
        stringAdapter.toJson(writer, value.imageURL)
        writer.endObject()
    }
}
